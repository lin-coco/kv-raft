syntax = "proto3";

option go_package = "raft/rpc";
package rpc;

service RaftRpc {
  /*
  candidate收集票
  接受者实现:
  1. 回复false如果term < currentTerm
  2. 如果 votedFor 为空或者为 candidateId，并且候选人的日志至少和自己一样新，那么就投票给他，也就是自己还没投给别人，且这个候选人合法的话，就投票给他
   */
  rpc RequestVote(RequestVoteReq) returns (RequestVoteResp);
  /*
  leader同步日志，也被作为心跳
  接收者实现:
  1. 回复false如果term < currentTerm
  2. 如果本节点日志中不包含prevLogIndex或者日志任期和prevLogTerm不符合，返回false
  3. 如果已经存在的日志条目和新的产生冲突（索引值相同但是任期号不同），删除这一条和之后所有的
  4. 附加日志中尚未存在的任何新条目
  5. 如果 leaderCommit > commitIndex，令 commitIndex 等于 leaderCommit 和 last新日志条目索引值中较小的一个

   */
  rpc AppendEntries(AppendEntriesReq) returns (AppendEntriesResp);
  /*
  leader将快照发送给落后的follower
  1. if term < r.currentTerm 回复当前term
  2. 将数据写入快照中，替代为新的快照，丢弃任何旧的快照
  3. 如果lastIncludeIndex、lastIncludeTerm和快照中最后的一样，则保留logs，否则丢弃之后的所有
  4. 重置状态机
   */
  rpc InstallSnapshot(InstallSnapshotReq) returns (InstallSnapshotResp);
}

message RequestVoteReq {
  int64 term = 1; // 候选者的周期
  int64 candidateId = 2; // 候选者的id
  int64 last_log_index = 3; // 候选者最后一个log的index
  int64 last_log_term = 4; // 候选者最后一个log的term
}
message RequestVoteResp {
  int64 term = 1; // 当前的term，为candidate更新自己
  bool vote_granted = 2; // true 意味着候选者接收投票
}

message AppendEntriesReq {
  int64 term = 1; // 领导者当前term
  int64 leader_id = 2; // 领导者id
  int64 prev_log_index = 3; // 领导者认为的该follower之前的logIndex
  int64 prev_log_term = 4; // 领导者认为的该follower之前的logTerm
  repeated LogEntry entries = 5; // 需要同步的日志
  int64 leaderCommit = 6; // 领导者的commitIndex

}
message AppendEntriesResp {
  int64 term = 1; // 当前的term，为leader更新自己
  bool success = 2; // true 如果follower匹配prev_log_index和prev_log_term
}

message LogEntry {
  string command = 1;
  int64 term = 2;
  int64 index = 3;
}

message InstallSnapshotReq {
  int64 term = 1; // leader term
  int64 leaderId = 2; // 给follower返回leaderid给client
  int64 lastIncludeIndex = 3;// 快照最后一个log的index
  int64 lastIncludeTerm = 4; // 快照最后一个log的term
  bytes data = 6; // 快照的原始数据
}
message InstallSnapshotResp {
  int64 term = 1; // currentTerm, for leader to update itself
}